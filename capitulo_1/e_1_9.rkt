#lang racket

; Each of the following two procedures defines a
; method for adding two positive integers in terms of the procedures
; `inc`, which increments its argument by 1, and `dec`, which decrements
; its argument by 1.
(define (inc x) (+ x 1))
(define (dec x) (- x 1))

; Este es el procedimiento RECURSIVO de suma
(define (plus-rec a b)
  (if (= a 0) 
      b 
      (inc (plus-rec (dec a) b))))

; Este es el procedimiento ITERATIVO de suma
(define (plus-iter a b)
  (if (= a 0) 
      b 
      (plus-iter (dec a) (inc b))))

;Using the substitution model, illustrate the process generated by each
;procedure in evaluating `(plus 4 5)`.  Are these processes iterative or
;recursive?

; El primer procedimiento, tal y como he puesto en el comentario es recursivo
; Esto se debe a que hay que guardar en el stack las llamadas que se realizan
; porque hay que realizar operaciones con cada llamada siguiente, es decir,
; hay que volver hacia atrás en las llamadas para llegar al resultado final.

; Con este procedimiento, (plus 4 5) sería:
; (+ (plus(3 5) 1)
; (+ (plus(2 5) 1 1)
; (+ (plus 1 5) 1 1 1)
; (+ (plus 0 5) 1 1 1 1)
; (+ 5 1 1 1 1) = 9


; El segundo procedimiento, tal y como he puesto en el comentario es iterativo.
; Esto se debe a que no hay que hacer operaciones con las llamadas al procedimiento
; que se van realizando, no hay que guardar las llamadas, simplemente se sustituyen
; por otras que dan el resultado adecuado.

; Con este procedimiento, (plus 4 5) sería:
; (plus 3 6)
; (plus 2 7)
; (plus 1 8)
; (plus 0 9) = 9 